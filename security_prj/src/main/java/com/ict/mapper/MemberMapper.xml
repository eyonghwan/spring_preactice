<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http:/mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ict.mapper.MemberMapper">
	<resultMap type="com.ict.domain.MemberVO" id="memberMap">
	<!-- 조인 등으로 기존 VO의 구조와 다른 데이터가 리턴되는 경우
	resultMap으로 묶습니다. primary key를 id 태그에 넣고
	result의 property에는 VO의 변수명, column은 DB상의 컬럼명을 넣습니다.
	이러면 VO의 변수명과 DB상의 컬럼명이 달라도 매칭이 됩니다. -->
	<id property="userid" column="userid" />
	<result property="userid" column="userid" />
	<result property="userpw" column="userpw" />
	<result property="userName" column="username" />
	<result property="regDate" column="regdate" />
	<result property="updateDate" column="updatedate" />
	<collection property="authList" resultMap="authMap" >
	</collection>
	</resultMap>
	
	<resultMap type="com.ict.domain.AuthVO" id="authMap" >
		<result property="userid" column="userid" />
		<result property="auth" column="auth" />	
	</resultMap>
	
	<select id="read" resultMap="memberMap">
		SELECT
			m.userid, userpw, username, enabled, regdate, updatedate, a.auth
		FROM
			member_tbl m
		JOIN
			member_auth a
		ON
			m.userid = a.userid 
		WHERE
			m.userid = #{userid}
	</select>
	
	<insert id="insertMemberTbl">
		INSERT INTO MEMBER_TBL(userid, userpw, username)
			VALUES
		(#{userid}, #{userpw}, #{userName})
	</insert>
	
	<update id="iserMemberAuth">
		INSERT ALL 
		<foreach collection="authList" item="item" separator=" " >
			INTO MEMBER_AUTH(userid,auth)
				VALUES
			(#{item.userid}, #{item.auth})
		</foreach>
		SELECT * 
			FROM DUAL
		
	</update>
	
</mapper>